1、用函数型function替换if else @see com.maviron.spring.springdemo.function
2、分支进行各个处理 @see com.maviron.spring.springdemo.demo.futuredemo.SendJoinGroupRequest
3、用lambda表达式遍历树节点  com.maviron.spring.springdemo.demo.handletree.TestTreeMenu
4、重试 采用springboot进行重试
 <dependency>
  <groupId>org.springframework.retry</groupId>
  <artifactId>spring-retry</artifactId>
 </dependency>
 https://github.com/javastacks/spring-boot-best-practice
5、使用递归遍历树 com.maviron.spring.springdemo.controller
6、pipline设计模式 com.maviron.spring.springdemo.piplinedesign
7、日志操作   <dependency>
                    <groupId>io.github.mouzt</groupId>
                    <artifactId>bizlog-sdk</artifactId>
                    <version>1.0.1</version>
                </dependency>
  https://mp.weixin.qq.com/s/8djOSaML-X8TeNC9WiVkgA
8、使用BeanPostProcessor自动映射AB测试
9、动态sql  com.maviron.spring.springdemo.controller.TableTestController
10、使用fetchSize提高获取数据的效率
11、PageHelper.startPage()后面必须紧跟list所以有一定的局限性  使用com.maviron.spring.springdemo.pageHelperUtil  进行优化即可
12、比较两个字段并获取其中不同值的属性 com.maviron.spring.springdemo.beanequals.AbstractContrast
13、规则引擎 用于处理if else 的处理 com.maviron.spring.springdemo.regulationengine.RuleClass
14、Pipline pipline模式 流水模式 通过next用于流程性校验